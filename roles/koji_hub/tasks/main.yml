---
#
# Setup koji hub server. 
#
- name: install koji hub server packages
  yum: name={{ item }} state=present
  with_items:
  - koji-hub
  - koji-hub-plugins
  - koji-web
  - koji-utils
  - koji-theme-fedora
  - mod_ssl
  - mod_wsgi
  - git
  - gnupg2
  tags:
  - packages
  - koji_hub

- name: make koji pki directory
  file: state=directory path=/etc/pki/koji/ owner=root group=root

- name: make koji pki subdirectories
  file: state=directory path=/etc/pki/koji/{{ item }} owner=root group=root
  with_items:
  - certs
  - private
  - confs
  tags:
  - koji_hub

- name: hub config
  template: src=hub.conf.j2 dest=/etc/koji-hub/hub.conf owner=apache group=apache mode=600
  tags:
  - config
  - koji_hub
  notify: restart httpd

- name: kojiweb config
  template: src=web.conf.j2 dest=/etc/kojiweb/web.conf owner=apache group=apache mode=600
  tags:
  - config
  - koji_hub
  notify: restart httpd

- name: enable httpd_can_network_connect SELinux boolean for fedmsg
  seboolean: name=httpd_can_network_connect state=yes persistent=yes
  tags:
  - config
  - selinux
  - koji_hub

- name: enable httpd_use_nfs SELinux boolean for fedmsg
  seboolean: name=httpd_use_nfs state=yes persistent=yes
  tags:
  - config
  - selinux
  - koji_hub

- name: koji fedmsg plugin
  copy: src=fedmsg-koji-plugin.py dest=/usr/lib/koji-hub-plugins/fedmsg-koji-plugin.py
  notify:
  - restart httpd
  tags:
  - config
  - koji_hub

- name: install kojiweb_cert_key.pem
  copy: src={{ puppet_private }}/koji/kojiweb_cert_key.pem dest=/etc/pki/tls/private/kojiweb_cert_key.pem owner=apache mode=600
  notify:
  - restart httpd
  tags:
  - config
  - koji_hub
  when: env != 'staging'

- name: install production koji_cert.pem
  copy: src={{ puppet_private }}/koji/koji_cert.pem dest=/etc/pki/tls/certs/koji_cert.pem owner=apache mode=600
  notify:
  - restart httpd
  tags:
  - config
  - koji_hub
  when: env != 'staging'

- name: install production koji_key.pem
  copy: src={{ puppet_private }}/koji/koji_key.pem dest=/etc/pki/tls/private/koji_key.pem owner=apache mode=600
  notify:
  - restart httpd
  tags:
  - config
  - koji_hub
  when: env != 'staging'

- name: Install staging koji ssl cert
  copy: src={{ puppet_private }}/koji/koji.stg_cert.pem dest=/etc/pki/tls/certs/koji.stg_cert.pem
  notify:
  - restart httpd
  tags:
  - config
  - koji_hub
  when: env == 'staging'

- name: install staging koji ssl key
  copy: src={{ puppet_private }}/koji/koji.stg_key.pem dest=/etc/pki/tls/private/koji.stg_key.pem
  notify:
  - restart httpd
  tags:
  - config
  - koji_hub
  when: env == 'staging'

- name: instaall fedora-ca.cert in various places
  copy: src={{ puppet_private }}/fedora-ca.cert dest={{ item }} owner=apache
  with_items: 
  - /etc/kojira/extras_cacert.pem
  - /etc/pki/tls/certs/extras_cacert.pem
  - /etc/pki/tls/certs/extras_upload_cacert.pem
  - /etc/pki/tls/certs/upload_cacert.pem
  tags:
  - config
  - koji_hub

- name: install kojira_cert_key
  copy: src={{ puppet_private }}/koji/kojira_cert_key.pem dest=/etc/kojira/kojira_cert_key.pem owner=apache mode=600
  tags:
  - config
  - koji_hub

- name: updatecrl script
  copy: src=updatecrl.sh dest=/usr/local/bin/updatecrl.sh owner=root mode=755
  tags:
  - config
  - koji_hub
  - cron

- name: updatecrl cronjob
  copy: src=updatecrl.cron dest=/etc/cron.d/updatecrl owner=root mode=644
  tags:
  - config
  - cron
  - koji_hub

- name: koji web config files
  copy: src={{ item }} dest=/etc/httpd/conf.d/{{ item }} owner=root group=root
  with_items:
  - kojiweb.conf
  - kojihub.conf
  - mash.conf
  - rel-eng.conf
  - repo.conf
  tags:
  - config
  - koji_hub
  notify: restart httpd

- name: koji staging ssl config
  copy: src=koji-ssl.conf.stg dest=/etc/httpd/conf.d/ssl.conf
  tags:
  - config
  - koji_hub
  notify: restart httpd
  when: env == "staging"

- name: koji ssl config
  copy: src=koji-ssl.conf dest=/etc/httpd/conf.d/ssl.conf
  tags:
  - config
  - koji_hub
  notify: restart httpd
  when: env != "staging"

- name: kojira log dir
  file: dest=/var/log/kojira owner=root group=root mode=0750 state=directory
  tags:
  - config
  - koji_hub
  - kojira

- name: kojira config
  copy: src=kojira.conf dest=/etc/kojira/kojira.conf
  tags:
  - config
  - koji_hub

- name: make mnt/koji directory
  file: state=link src=/mnt/fedora_koji/koji dest=/mnt/koji/ owner=root group=root
  tags:
  - koji_hub

- name: set sebooleans so koji can talk to the db
  seboolean: name=httpd_can_network_connect_db state=true persistent=true
  tags:
  - selinux
  - koji_hub

- name: set sebooleans so koji can anon write
  seboolean: name=allow_httpd_anon_write state=true persistent=true
  tags:
  - selinux
  - koji_hub
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "6"

- name: set sebooleans so koji can anon write
  seboolean: name=httpd_anon_write state=true persistent=true
  tags:
  - selinux
  - koji_hub
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "7"

- name: Set httpd to run on boot
  service: name=httpd enabled=yes
  ignore_errors: true
  notify:
  - restart httpd
  tags:
  - service
  - koji_hub

- name: Make sure kojira is set to not run on boot (controlled by keepalived)
  service: name=kojira enabled=no
  tags:
  - service
  - koji_hub

- name: install cert for oscar (garbage collector) user
  copy: src={{ puppet_private }}/koji/gc/oscar_key_and_cert.pem dest=/etc/koji-gc/client.crt
  tags:
  - koji_hub

- name: install serverca cert for oscar (garbage collector) user
  copy: src={{ puppet_private }}/fedora-ca.cert dest=/etc/koji-gc/serverca.crt
  tags:
  - koji_hub

- name: install clientca cert for oscar (garbage collector) user
  copy: src={{ puppet_private }}/fedora-ca.cert dest=/etc/koji-gc/clientca.crt
  tags:
  - koji_hub

- name: install koji-gc.conf
  file: src=koji-gc.conf dest=/etc/koji-gc/koji-gc.conf
  tags:
  - koji_hub

- name: install cron jobs to be used by keepalived later
  copy: src={{ item }} dest=/usr/local/etc/{{ item }}
  with_items:
  - koji-directory-cleanup
  - koji-gc
  - koji-prunesigs
  tags:
  - files
  - koji_hub

