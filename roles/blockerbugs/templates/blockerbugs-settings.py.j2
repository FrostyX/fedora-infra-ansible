SECRET_KEY = '{{ blockerbugs_secret_key }}'
SQLALCHEMY_DATABASE_URI = 'postgresql+psycopg2://{{ blockerbugs_db_user }}:{{ blockerbugs_db_password }}@{{ blockerbugs_db_host }}:{{ blockerbugs_db_port }}/{{ blockerbugs_db_name }}'
FAS_ADMIN_GROUP = "qa-admin"
FAS_USER = "{{ blockerbugs_fas_user }}@fedoraproject.org"
FAS_PASSWORD = "{{ blockerbugs_fas_password }}"
{% if env == "staging" %}
FAS_FLASK_COOKIE_REQUIRES_HTTPS = False
FAS_CHECK_CERT = False
PRODUCTION = False
SQLALCHEMY_TRACK_MODIFICATIONS = False
{% endif %}
BUGZILLA_URL = '{{ blockerbugs_bugzilla_url }}'
BODHI_URL = '{{ blockerbugs_bodhi_url }}'
BUGZILLA_XMLRPC = BUGZILLA_URL + 'xmlrpc.cgi'
KOJI_URL = "{{ blockerbugs_bugzilla_url }}"
FILE_LOGGING = False
SYSLOG_LOGGING = True
STREAM_LOGGING = True

# to fix login issue for folks who are part of many FAS groups
PREFERRED_URL_SCHEME='https'

# Make browsers send session cookie only via HTTPS
SESSION_COOKIE_SECURE = True

# Tell flask that we're behind proxy
BEHIND_PROXY = True

# enable fedmenu
FEDMENU_URL = 'https://apps.fedoraproject.org/fedmenu/'
FEDMENU_DATA_URL = 'https://apps.fedoraproject.org/js/data.js'

{% if env == "staging" %}
PAGURE_URL = "https://stg.pagure.io/"
PAGURE_API = "https://stg.pagure.io/api/0/"
{% else %}
PAGURE_URL = "https://pagure.io/"
PAGURE_API = "https://pagure.io/api/0/"
{% endif %}
PAGURE_REPO = "fedora-qa/blocker-review"
PAGURE_REPO_TOKEN = "{{ blockerbugs_pagure_repo_token }}"
PAGURE_REPO_WEBHOOK_KEY = "{{ blockerbugs_pagure_repo_webhook_key }}"
PAGURE_BOT_USERNAME = 'blockerbot'
