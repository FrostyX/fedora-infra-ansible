---
# Configuration for IPA

- name: install needed packages
  package: name={{ item }} state=present
  with_items:
  - haveged
  - ipa-server
  - ipa-server-dns
  - ipa-fas
  tags:
  - ipa/server
  - packages

# TODO: need pynag for monitoring, not yet in rhel8.

- name: enable haveged
  service: name=haveged state=started enabled=yes
  tags:
  - ipa/server
  - config

- name: Copy LDIF file for working around annoying IPA bug in initial sync
  copy: src=fix_sasl.ldif dest=/usr/share/ipa/fix_sasl.ldif
  tags:
  - ipa/server
  - config

- name: install IPA
  command: ipa-server-install
           --realm={{ipa_realm}}
           --domain={{ipa_realm}}
           --ds-password={{ipa_dm_password}}
           --admin-password={{ipa_admin_password}}
           --mkhomedir
           --no-ntp
           --unattended
           --no-ssh
           --no-sshd
           --setup-dns
           --forwarder=10.3.163.33
           --forwarder=10.3.163.34
           --log-file=/var/log/ipainstall.log
           creates=/etc/ipa/default.conf
  tags:
  - ipa/server
  - config
  when: ipa_initial

- name: install IPA vault
  command: ipa-kra-install
           --password={{ipa_dm_password}}
           --unattended
           --log-file=/var/log/ipakrainstall.log
           creates=/var/log/ipakrainstall.log
  tags:
  - ipa/server
  - config
  when: ipa_initial

- name: determine whether we need to set up replication
  stat: path=/etc/ipa/default.conf
  register: replication_status
  tags:
  - ipa/server
  - config
  when: not ipa_initial

- name: create replica file
  delegate_to: ipa01.iad2.fedoraproject.org
  command: ipa-replica-prepare
           --password={{ipa_dm_password}}
           {{inventory_hostname}}
           creates=/var/lib/ipa/replica-info-{{inventory_hostname}}.gpg
  tags:
  - ipa/server
  - config
  when: not ipa_initial and ansible_distribution_major_version|int < 8 and not replication_status.stat.exists

- name: retrieve replica file
  delegate_to: ipa01.iad2.fedoraproject.org
  fetch: src=/var/lib/ipa/replica-info-{{inventory_hostname}}.gpg
         dest=/tmp/ipa_replica_{{inventory_hostname}}.gpg
         flat=yes
  tags:
  - ipa/server
  - config
  when: not ipa_initial and ansible_distribution_major_version|int < 8 and not replication_status.stat.exists

- name: deploy replica file
  copy: src=/tmp/ipa_replica_{{inventory_hostname}}.gpg
        dest=/root/ipa_replica_{{inventory_hostname}}.gpg
        mode=0600 owner=root group=root
  tags:
  - ipa/server
  - config
  when: not ipa_initial and ansible_distribution_major_version|int < 8 and not replication_status.stat.exists

- name: destroy replica file on ansible host
  delegate_to: localhost
  file: path=/tmp/ipa_replica_{{inventory_hostname}}.gpg state=absent
  tags:
  - ipa/server
  - config
  when: not ipa_initial and ansible_distribution_major_version|int < 8 and not replication_status.stat.exists

- name: deploy replica
  command: ipa-replica-install
           --setup-ca
           --setup-kra
           --password={{ipa_dm_password}}
           --admin-password={{ipa_admin_password}}
           --mkhomedir
           --no-ntp
           --unattended
           --no-ssh
           --no-sshd
           --setup-dns
           --forwarder=10.3.163.33
           --forwarder=10.3.163.34
           --skip-conncheck
           --log-file=/var/log/ipainstall.log
           /root/ipa_replica_{{inventory_hostname}}.gpg
           creates=/etc/ipa/default.conf
  tags:
  - ipa/server
  - config
  when: not ipa_initial and ansible_distribution_major_version|int < 8 and not replication_status.stat.exists

- name: deploy replica
  command: ipa-replica-install
           --setup-ca
           --setup-kra
           --admin-password={{ipa_admin_password}}
           --no-host-dns
           --mkhomedir
           --no-ntp
           --unattended
           --no-ssh
           --no-sshd
           --skip-conncheck
           --force-join
           --log-file=/var/log/ipainstall.log
           --domain={{ipa_realm}}
           --server=ipa01.iad2.fedoraproject.org
           creates=/etc/ipa/default.conf
  tags:
  - ipa/server
  - config
  when: not ipa_initial and ansible_distribution_major_version|int >= 8 and not replication_status.stat.exists

- name: Disable rewrites
  copy: src=ipa-rewrite.conf dest=/etc/httpd/conf.d/ipa-rewrite.conf
  notify:
  - reload httpd
  tags:
  - ipa/server
  - config

- name: Deploy configuration script
  copy: src=configure-ipa.sh dest=/root/configure-ipa.sh mode=0700 owner=root group=root
  register: config_deployed
  tags:
  - ipa/server
  - config
  when: ipa_initial

- name: Run configuration script
  command: /bin/bash /root/configure-ipa.sh {{ipa_admin_password}}
  tags:
  - ipa/server
  - config
  when: ipa_initial and config_deployed.changed

- name: Get admin ticket
  shell: echo "{{ipa_admin_password}}" | kinit admin
  tags:
  - ipa/server
  - keytab
  - config
  - krb5
  when: ipa_initial

- name: Configure password policy
  command: ipa pwpolicy-mod global_policy --maxlife=0 --minlife=0 --history=0 --minclasses=0 --minlength=0 --maxfail=0
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: pwpolicy_output
  changed_when: "'no modifications to be performed' not in pwpolicy_output.stderr"
  failed_when: "'no modifications to be performed' not in pwpolicy_output.stderr and pwpolicy_output.rc != 0"

- name: Create fas_sync user
  command: ipa user-add fas_sync --first=FAS --last=Sync
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: create_output
  changed_when: "'already exists' not in create_output.stderr"
  failed_when: "'already exists' not in create_output.stderr and create_output.rc != 0"

- name: Promote fas_sync user
  command: ipa group-add-member admins --users=fas_sync
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: promote_output
  changed_when: "'already a member' not in promote_output.stdout"
  failed_when: "'already a member' not in promote_output.stdout and promote_output.rc != 0"

# Noggin user setup

- name: Register the proper noggin admin password
  set_fact:
    noggin_password: "{{ (env == 'production')|ternary(noggin_admin_password, noggin_stg_admin_password) }}"

- name: Create noggin user
  # Expiration date will be a Friday 13th in 30 years. I'm sure we'll remember that.
  # (if unset, IPA will assume the password is expired because it hasn't been set by the user themselves)
  shell: echo -e "{{ noggin_password }}\n{{ noggin_password }}" | ipa user-add noggin --first=Noggin --last=User --password --password-expiration 20500513000000Z
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: create_output
  changed_when: "'already exists' not in create_output.stderr"
  failed_when: "'already exists' not in create_output.stderr and create_output.rc != 0"

- name: Create the noggin privilege
  command:
    argv:
      - ipa
      - privilege-add
      - Self-service Portal Administrators
      - --desc=Noggin admin users
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: output
  changed_when: "'already exists' not in output.stdout"
  failed_when: "'already exists' not in output.stdout and output.rc != 0"

- name: Setup the noggin privilege
  command:
    argv:
      - ipa
      - privilege-add-permission
      - Self-service Portal Administrators
      - "--permissions=System: Modify Users"
      - "--permissions=System: Change User password"
      - "--permissions=System: Add Stage User"
      - "--permissions=System: Read Stage Users"
      - "--permissions=System: Modify Stage User"
      - "--permissions=System: Modify User RDN"
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: output
  changed_when: "'Number of permissions added 0' not in output.stdout"
  failed_when: "'Number of permissions added 0' not in output.stdout and output.rc != 0"

- name: Create the noggin role
  command:
    argv:
      - ipa
      - role-add
      - Self-service Portal Administrator
      - --desc=Noggin admin user
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: output
  changed_when: "'already exists' not in output.stdout"
  failed_when: "'already exists' not in output.stdout and output.rc != 0"

- name: Setup the noggin role
  command:
    argv:
      - ipa
      - role-add-privilege
      - Self-service Portal Administrator
      - --privileges=Self-service Portal Administrators
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: output
  changed_when: "'Number of privileges added 0' not in output.stdout"
  failed_when: "'Number of privileges added 0' not in output.stdout and output.rc != 0"

- name: Give noggin the appropriate role
  command:
    argv:
      - ipa
      - role-add-member
      - Self-service Portal Administrator
      - --user=noggin
  tags:
  - ipa/server
  - config
  when: ipa_initial
  register: output
  changed_when: "'Number of members added 0' not in output.stdout"
  failed_when: "'Number of members added 0' not in output.stdout and output.rc != 0"

- name: Destroy admin ticket
  command: kdestroy -A
  tags:
  - ipa/server
  - keytab
  - config
  - krb5
  when: ipa_initial


- name: Create LDIF directory
  file: path=/root/ldif state=directory owner=root group=root mode=0750
  tags:
  - ipa/server
  - config

- name: Copy LDIF files
  copy: src={{item}} dest=/root/ldif/{{item}}
  with_items:
  - grant_anonymous_replication_view.ldif
  - grant_fas_sync.ldif
  - use_id_fp_o.ldif
  tags:
  - ipa/server
  - config

# This is a special one, in that it needs to apply on each master since it's non-replicated.
- name: Grant access to replication status
  command: ldapmodify -Y EXTERNAL -H {{ ipa_ldap_socket }}
           -f /root/ldif/{{item}}
  with_items:
  - grant_anonymous_replication_view.ldif
  - grant_fas_sync.ldif
  - use_id_fp_o.ldif
  tags:
  - ipa/server
  - config
  register: grant_repl_status_output
  changed_when: "'Type or value exists' not in grant_repl_status_output.stderr"
  failed_when: "'Type or value exists' not in grant_repl_status_output.stderr and 'modifying entry' not in grant_repl_status_output.stdout"

# Make some httpd changes
- name: Configure referer override
  template: src=referer-override.conf
            dest=/etc/httpd/conf.d/referer-override.conf
  notify:
  - reload apache
  tags:
  - ipa/server
  - config

- name: Update xmlrpc_uri
  lineinfile: dest=/etc/ipa/default.conf
              regexp='xmlrpc_uri ='
              line='xmlrpc_uri = https://{{ inventory_hostname }}/ipa/xml'
  tags:
  - ipa/server
  - config
