#{{ ansible_managed }}
[hub]
debug = {{ faf_web_debug }}
proxy_setup = {{ faf_web_proxy_setup }}
secret_key = {{ faf_web_secret_key }}
{% if faf_web_on_root %}
url = https://{{ domain }}/
{% else %}
url = https://{{ domain }}/faf/
{% endif %}
server_name = {{ faf_server_name }}
brand_title = {{ faf_web_brand_title }}
brand_subtitle = {{ faf_web_brand_subtitle }}

{% if faf_web_fedmenu_url %}
fedmenu_url = {{ faf_web_fedmenu_url }}
fedmenu_data_url = {{ faf_web_fedmenu_data_url }}
{% endif %}

# When OpenID login is disabled, this option can be used to override permission
# checks and make everyone a package maintainer.
# In that case no login is necessary to access maintainer-only actions.
everyone_is_maintainer = {{ faf_web_everyone_is_admin }}
# When OpenID login is disabled, this option can be used to override permission
# checks and make everyone an admin.
# In that case no login is necessary to access admin-only actions.
everyone_is_admin = {{ faf_web_everyone_is_maintainer }}

[openid]
enabled = {{ faf_web_openid }}

{% if faf_web_openid_privileged_teams %}
privileged_teams = {{ faf_web_openid_privileged_teams }}
{% endif %}

[cache]
#types:
#  null - no caching
#  simple - process-local memory cache
#  memcached - requires pylibmc
type = {{ faf_web_cache_type }}
memcached_host = localhost
memcached_port = {{ memcached_port }}
memcached_key_prefix = webfaf

[throttle]
# Number of mails that can be sent per the time frame
rate = {{ faf_web_throttle_rate }}
# Time to wait (in seconds) before another mail can be sent
timeframe = {{ faf_web_throttle_timeframe }}
# Start the throttling after this number of mails is sent
burst = {{ faf_web_throttle_burst }}
