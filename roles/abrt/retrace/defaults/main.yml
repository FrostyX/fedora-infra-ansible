---

# Which group is used for authentication
rs_auth_group: retrace

# Force to use HTTPS - only disable on trusted network
rs_require_https: true

# Allow to delete task data via HTTP API (https://server/<task_id>/delete)
rs_allow_api_delete: false

# Allow interactive tasks (security risk, do not use on public systems)
rs_allow_interactive: false

# Allow X-CoreFileDirectory header
rs_allow_external_dir: false

# Allow to create tasks owned by task manager (security risk)
rs_allow_task_manager: false

# Allow to create VMCore tasks in the task manager
rs_allow_vmcore_task: true

# Allow to create VMCore tasks in the task manager
rs_allow_usrcore_task: true

# If white list is disabled, anyone can delete tasks
rs_task_manager_auth_delete: false

# Whitespace-separated list of users allowed to delete tasks
rs_task_manager_delete_users:

# If set to non-empty string, makes the case number clickable in task manager
# The string is expanded by python, with the case number passed
# as the only argument, do not forget %d
rs_case_number_url:

# Verify GPG signatures of installed packages
rs_require_gpg_check: true

# Maximum tasks running at one moment
rs_max_parallel_tasks: 5

# Maximum size of archive uploaded by user (MB)
rs_max_packed_size: 50

# Maximum size of archive contents (MB)
rs_max_unpacked_size: 1024

# Minimal storage left on WorkDir FS after unpacking archive (MB)
rs_min_storage_left: 1024

# Delete old tasks after (hours); <= 0 means never
# This is mutually exclusive with ArchiveTasksAfter (see below)
# The one that occurs first removes the task from the system
# In case DeleteTaskAfter = ArchiveTaskAfter, archiving executes first
rs_delete_task_after: 0

# Delete old failed tasks after (hours); <= 0 means never
# This is useful for cleanup of failed tasks before the standard
# mechanisms do (DeleteTaskAfter or ArchiveTaskAfter)
# In case DeleteFailedTaskAfter > DeleteTaskAfter
# or DeleteFailedTaskAfter > ArchiveTaskAfter, this option does nothing
rs_delete_failed_task_after: 0

# Archive old task after (hours); <= 0 means never
# This is mutually exclusive with DeleteTasksAfter (see above)
# The one that occurs first removes the task from the system
# In case DeleteTaskAfter = ArchiveTaskAfter, archiving executes first
rs_archive_task_after: 0

# SQLite statistics DB filename
rs_db_file: stats.db

# Log directory
rs_log_dir: /var/log/retrace-server

# Local repos directory
rs_repo_dir: /var/cache/retrace-server

# Directory where the crashes and results are saved
rs_save_dir: /var/spool/retrace-server

# Directory where old tasks are moved
rs_drop_dir: /srv/retrace/archive

# Whether to use createrepo's --update option (faster, but requires a lot of memory)
rs_use_createrepo_update: false

# How many latest packages to keep for rawhide
rs_keep_rawhide_latest: 3

# Repo used to install chroot for vmcores
rs_kernel_chroot_repo: http://dl.fedoraproject.org/pub/fedora/linux/releases/16/Everything/$ARCH/os/

# Koji directory structure can be used to search for kernel debuginfo
rs_koji_root: /mnt/koji

# Whether task manager should look to an external FTP for task data
rs_use_ftp_tasks: false

# FTP connection parameters
rs_ftp_ssl: false
rs_ftp_host:
rs_ftp_user:
rs_ftp_password:
rs_ftp_dir: /

# Size of buffer for downloading from FTP (MB)
rs_ftp_buffer_size: 16

# Whether to use wget as a fallback to finding kernel debuginfos
rs_wget_kernel_debuginfos: false

# Where to download kernel debuginfos from
# $VERSION $RELEASE and $ARCH are replaced by the appropriate value
# kernel-debuginfo-VRA.rpm is appended to the end
rs_kernel_debuginfo_url: http://kojipkgs.fedoraproject.org/packages/$BASENAME/$VERSION/$RELEASE/$ARCH/

# Run makedumpfile with specified dumplevel; <= 0 or >= 32 means disabled
rs_vmcore_dump_level: 0

# EXPERIMENTAL! Use ABRT Server's storage to map build-ids
# into debuginfo packages and resolve dependencies
# Requires support from ABRT Server
rs_use_faf_packages: false

# Spool directory for FAF packages
faf_spool_dir: /var/spool/faf

# Run the retrace in a Mock chroot (default), or a Podman container
# (mock|podman)
rs_retrace_environment: podman

# Whether to enable e-mail notifications
rs_email_notify: false

# Who sends the e-mail notifications
rs_email_notify_from_user: retrace

# Calculate md5sum for remote resources - changeable on manager page
rs_calculate_md5: 0

# URL of Bugzilla
rs_bugzilla_url: "https://bugzilla.redhat.com"
# Custom path to the file with Bugzilla credentials, stored in format:
# [bugzilla.yoursite.com]
# user =
# password =
# If not set checks for credentials in:
# ~/.config/python-bugzilla/bugzillarc, ~/.bugzillarc, /etc/bugzillarc
rs_bugzilla_credentials_path:

# Clean up tasks with assigned bugzilla bugs in following states
# NEW, ASSIGNED, ON_DEV, POST, MODIFIED, ON_QA, VERIFIED, RELEASE_PENDING, CLOSED
rs_bugzilla_status: "VERIFIED, RELEASE_PENDING, CLOSED"

# Search query options for bugzilla bugs
rs_bugzilla_product: "Red Hat Enterprise Linux 7"

rs_bugzilla_component: "kernel"

# Number and order of values in TriggerWords and RegExes should be identical
# Trigger words to look for in the text of bugzilla bugs
rs_bugzilla_triggerwords: "retrace-server-interact, retrace/tasks"

# Regular expressions used to get task numbers from the text of bugzilla bugs
rs_bugzilla_regexes: "retrace-server-interact\\s+([0-9]{9}), /var/spool/retrace-server/([0-9]{9})/crash/vmcore"

# Timeout (in seconds) for communication with any process
rs_process_communicate_timeout: 3600

rs_archhosts:
  - { arch: i386, url: }
  - { arch: x86_64, url: }
  - { arch: ppc64, url: }
  - { arch: armhfp, url: }
  - { arch: s390x, url: }

# Force package reinstall
rs_force_reinstall: false

# Check server health after installation
rs_check_health: true

# Path to the executable hook scripts
# https://github.com/abrt/retrace-server/wiki/Hook-scripts
rs_hooks_executable_path: /usr/libexec/retrace-server/hooks/

# Global time limit for hook scripts (in seconds)
rs_hooks_global_timeout: 300

# Hostname
hostname: example.org

# Path to the executable hook scripts                                                                                    
# see https://github.com/abrt/retrace-server/wiki/Hook-scripts
rs_executable_hooks_path: "/usr/libexec/retrace-server/hooks/"

# Global time limit for hook scripts (in seconds)
rs_global_hook_timeout: 300
