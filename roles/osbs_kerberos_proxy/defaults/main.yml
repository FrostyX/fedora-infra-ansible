---
# generate self-signed certificates? useful for debugging
ssl_generate_selfsigned: false

ssl_cert_file: /etc/pki/tls/certs/{{ ansible_fqdn }}.crt
ssl_key_file: /etc/pki/tls/private/{{ ansible_fqdn }}.key
ssl_client_certkey_file: /etc/httpd/krbproxy_certkey.crt
ssl_client_ca_file: /etc/httpd/krbproxy_ca.crt

proxy_port: 9443
proxy_dest_url: https://127.0.0.1:8443/
proxy_authname: Kerberos Authentication

# used for mutually authenticating the proxy and the proxied machine
# no authentication happens when unset
#proxy_machine_ca_file: /var/lib/openshift/openshift.local.certificates/ca/cert.crt
#proxy_machine_cert_file: /var/lib/openshift/openshift.local.certificates/openshift-client/cert.crt
#proxy_machine_key_file: /var/lib/openshift/openshift.local.certificates/openshift-client/key.key

# if no ticket is supplied, fall back to basic authentication by login+password
# (through kerberos)
proxy_enable_password_login: false

proxy_secrets_owner: apache
proxy_secrets_group: root
proxy_secrets_perms: "0600"

krb_keytab_file: /etc/httpd/HTTP-{{ ansible_fqdn }}.keytab

kerberos_client_realm_name: EXAMPLE.COM
kerberos_client_kdc_hostname: kerberos
kerberos_client_admin_hostname: kerberos
kerberos_client_dns_lookup_realm: false
kerberos_client_dns_lookup_kdc: false
kerberos_client_ticket_lifetime: 24h
kerberos_client_renew_lifetime: 7d
kerberos_client_forwardable: true

# extra verbose httpd logs?
proxy_debug: false

# set to false if you don't use firewalld or do not want the playbook to modify it
manage_firewall: true
