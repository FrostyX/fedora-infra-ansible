{% if datacenter == 'phx2' %}
{% if env == 'staging' %}
suffix  = 'stg.phx2.fedoraproject.org'
{% else %}
suffix = 'phx2.fedoraproject.org'
vpn_suffix = 'vpn.fedoraproject.org'
{% endif %}
{% elif datacenter == 'iad2' %}
{% if env == 'staging' %}
suffix  = 'stg.iad2.fedoraproject.org'
{% else %}
suffix = 'iad2.fedoraproject.org'
vpn_suffix = 'vpn.fedoraproject.org'
{% endif %}
{% else %}
{% if env == 'staging' %}
suffix  = 'stg.fedoraproject.org'
{% else %}
suffix = 'fedoraproject.org'
vpn_suffix = 'vpn.fedoraproject.org'
{% endif %}
{% endif %}

config = dict(
    endpoints={
        # We need an endpoint for each of the mailman pieces that picks up and
        # imports our plugin.  So far that's the 'archiver' and the 'pipeline'.
        "mailman.mailman01": [
            "tcp://mailman01.%s:3000" % suffix,
            "tcp://mailman01.%s:3001" % suffix,

            # On Nov 19th, we started getting tracebacks that mailman3 had run
            # out of endpoints.  We're not sure what changed that required
            # additional entries here, but we're adding them to try and make the
            # error go away.
            # One idea is that the mailman REST server grew the ability to list
            # the archivers.  Postorius calls that, and it (under the hood)
            # tries to initialize all the archivers, which would inadvertently
            # try to force our fedmsg plugin to establish a socket.
            "tcp://mailman01.%s:3002" % suffix,
            "tcp://mailman01.%s:3003" % suffix,
        ],
    },
)
