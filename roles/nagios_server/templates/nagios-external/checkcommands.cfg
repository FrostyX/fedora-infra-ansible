################################################################################
# Sample object config file for Nagios 
#
# Read the documentation for more information on this configuration file.  I've
# provided some comments here, but things may not be so clear without further
# explanation, so make sure to read the HTML documentation!
# 
# Last Modified: 12-15-2005
#
################################################################################


################################################################################
# COMMAND DEFINITIONS
#
# SYNTAX:
#
#	define command{
#               template      <templatename>
#		name          <objectname>
#               command_name  <commandname>
#               command_line  <commandline>
#               }
#
# WHERE:
#
# <templatename> = object name of another command definition that should be
#                  used as a template for this definition (optional)
# <objectname>   = object name of command definition, referenced by other
#                  command definitions that use it as a template (optional)
# <commandname>  = name of the command, as recognized/used by Nagios
# <commandline>  = command line
#
################################################################################




################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML 
# documentation on the plugins for examples of how to configure command definitions.
#
################################################################################

# 'check_koji'
define command{
        command_name    check_koji
        command_line    $USER1$/check_koji
}

# 'check by nrpe'
define command{
        command_name    check_by_nrpe
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
}

# 'pgsql'
define command{
	command_name	check_pgsql
        command_line    $USER1$/check_pgsql -H $HOSTADDRESS$ -d $ARG1$ -p '{{nagios_db_user_password}}' --logname 'nagiosuser'
}

# 'check_website' command definition
define command{
        command_name    check_website
        command_line    $USER1$/check_http -w 18 -c 28 -I $HOSTADDRESS$ -H $ARG1$ -u "$ARG2$" -s "$ARG3$"
}

define command{
        command_name    check_website_ssl
        command_line    $USER1$/check_http -w 18 -c 28 --ssl -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -s "$ARG3$"
}

define command{
        command_name    check_remote_website
        command_line    $USER1$/check_http -w 18 -c 28 -H $ARG1$ -u "$ARG2$" -s "$ARG3$"
}
define command{
        command_name    check_remote_website_ssl
        command_line    $USER1$/check_http -w 18 -c 28 --ssl -H $ARG1$ -u $ARG2$ -s "$ARG3$"
}

define command {
        command_name    check_by_ssh_check_raid
        command_line    $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ "$USER1$/check_raid.py"
}

define command {
        command_name    check_by_ssh_check_disk
        command_line    $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ "$USER1$/check_disk -w $ARG1$% -c $ARG2$% -p $ARG3$"
}

# 'check_ssh' command definition
define command{
	command_name	check_ssh
	command_line	$USER1$/check_ssh -H $HOSTADDRESS$
}

# 'check_dns' command definition
define command{
        command_name    check_dns
        command_line    $USER1$/check_dns -H www.yahoo.com -s $HOSTADDRESS$
        }

# 'check_dns_fpo' command definition
define command{
        command_name    check_dns_fpo
        command_line    $USER1$/check_dns -H fedoraproject.org -A -s $HOSTADDRESS$
        }

# 'check_ftp' command definition
define command{
        command_name    check_ftp
        command_line    $USER1$/check_ftp -H $HOSTADDRESS$
        }


# 'check_hpjd' command definition
define command{
        command_name    check_hpjd
        command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ -C public
        }


# 'check_http' command definition
define command{
        command_name    check_http
        command_line    $USER1$/check_http -H $HOSTADDRESS$
        }

# 'check_https' command definition
define command{
        command_name    check_https
        command_line    $USER1$/check_http -H $HOSTADDRESS$ --ssl
        }


# 'check_local_disk' command definition
define command{
        command_name    check_local_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
        }


# 'check_local_load' command definition
define command{
        command_name    check_local_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }


# 'check_local_procs' command definition
define command{
        command_name    check_local_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
        }


# 'check_local_users' command definition
define command{
        command_name    check_local_users
        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
        }


# 'check_nntp' command definition
define command{
        command_name    check_nntp
        command_line    $USER1$/check_nntp -H $HOSTADDRESS$
        }


# 'check_ping' command definition
define command{
        command_name    check_ping
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
        }

# 'check_pop' command definition
define command{
        command_name    check_pop
        command_line    $USER1$/check_pop -H $HOSTADDRESS$
        }


# 'check_smtp' command definition
define command{
        command_name    check_smtp
        command_line    $USER1$/check_smtp -H $HOSTADDRESS$
        }


# 'check_tcp' command definition
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$
	}


# 'check_telnet' command definition
define command{
        command_name    check_telnet
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 23
        }


# 'check_udp' command definition
define command{
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$
	}




################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################


# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Only one ICMP echo packet is sent (determined by the '-p 1' argument)

# 'check-host-alive' command definition
define command{
        command_name    check-host-alive
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 2
        }

define command{
        command_name    true
        command_line    /bin/true
        }


# 'check_bzr' command definition
# I'd like this to actually interact with BZR, but I can't find any 
# proper documentation on the protocol to craft send/expect/quit 
# strings.
define command{
        command_name    check_bzr
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 4155
}

# 'check_git' command definition
# I'd like this to actually interact with GIT, but I can't find any 
# proper documentation on the protocol to craft send/expect/quit 
# strings.
define command{
        command_name    check_git
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 9418
}

## dummy command nsca/passive checks

 define command{
    command_name check_dummy
    command_line $USER1$/check_dummy $ARG1$ $ARG2$
    }
