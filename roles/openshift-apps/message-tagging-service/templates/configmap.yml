---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "mts-config"
  labels:
    app: "mts"
data:
  config.py: |-
    class BaseConfiguration:
        # FIXME: Set this to False when MTS is ready to work on either stg or prod
        dry_run = True

        log_level = 'DEBUG'

        koji_cert = None
        keytab = '/etc/krb5.keytab'
        principal = '{{ app }}/{{ app }}{{ env_suffix }}.fedoraproject.org@{{ ipa_realm }}'

        messaging_backend = 'fedmsg'
        messaging_backends = {
            'fedmsg': {'service': 'mts'},
        }
        build_state = 'ready'

{% if env == 'staging' %}
        # Running in staging, a rule file inside my perosnal repo is used in order to test conveniently.
        rules_file_url = 'https://pagure.io/mts-rules/raw/master/f/rules.yaml'
        mbs_api_url = 'https://mbs.stg.fedoraproject.org/module-build-service/1/'
        koji_profile = 'stg'
        consumer_topics = [
            'org.fedoraproject.stg.mbs.module.state.change',
        ]
{% else %}
        rules_file_url = ('https://infrastructure.fedoraproject.org/cgit/ansible.git/tree/'
                          'roles/openshift-apps/message-tagging-service/files/mts-rules.yml')
        mbs_api_url = 'https://mbs.fedoraproject.org/module-build-service/1/'
        koji_profile = 'koji'
        consumer_topics = [
            'org.fedoraproject.prod.mbs.module.state.change',
        ]
{% endif %}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "mts-fedmsg"
  labels:
    app: "mts"
data:
  mts.py: |-
    config = {
        'zmq_enabled': True,
        'mts-consumer': True,
        'validate_signatures': False,
        'active': True,

{% if env == 'staging' %}
        'environment': 'stg',
        'endpoints': {
          'fedora-infrastructure': [
            'tcp://stg.fedoraproject.org:9940',
          ],
        },
{% else %}
        'environment': 'prod',
        'endpoints': {
          'fedora-infrastructure': [
            'tcp://hub.fedoraproject.org:9940',
          ],
        },
{% endif %}
    }
  logging.py: |-
    config = dict(logging={
        "version": 1,
        "formatters": {
            "bare": {
                "datefmt": "%Y-%m-%d %H:%M:%S",
                "format": "[%(asctime)s][%(name)10s %(levelname)7s] %(message)s"
            }
        },
        "loggers": {
            "message_tagging_service": {
                "handlers": ["console"], "propagate": False, "level": "DEBUG"},
            "fedmsg": {
                "handlers": ["console"], "propagate": False, "level": "DEBUG"},
            "moksha": {
                "handlers": ["console"], "propagate": False, "level": "DEBUG"},
            "koji": {
                "handlers": ["console"], "propagate": False, "level": "DEBUG"},
        },
        "handlers": {
            "console": {
                "formatter": "bare",
                "class": "logging.StreamHandler",
                "stream": "ext://sys.stdout",
                "level": "DEBUG"
            }
        },
    })
