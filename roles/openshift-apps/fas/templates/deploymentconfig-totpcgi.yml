apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: fas
{% if objectname == "deploymentconfig-totpcgi-vpn.yml" %}
    service: totpcgi-vpn
{% else %}
    service: totpcgi
{% endif %}
  name: totpcgi
spec:
  replicas: 3
  selector:
{% if objectname == "deploymentconfig-totpcgi-vpn.yml" %}
    deploymentconfig: totpcgi-vpn
{% else %}
    deploymentconfig: totpcgi
{% endif %}
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fas
{% if objectname == "deploymentconfig-totpcgi-vpn.yml" %}
        deploymentconfig: totpcgi-vpn
{% else %}
        deploymentconfig: totpcgi
{% endif %}
    spec:
      containers:
      - name: totpcgi
        image: totpcgi:latest
        env:
        - name: TZ
          value: UTC
        ports:
        - containerPort: 8080
        - containerPort: 8443
        volumeMounts:
        - name: config-volume
          mountPath: /etc/totpcgi
          readOnly: true
        - name: httpdir-volume
          mountPath: /httpdir
        - name: secret-tls
          mountPath: /etc/pki/totp
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: totpcgi
      - name: httpdir-volume
        emptyDir: {}
      - name: secret-tls
        secret:
{% if objectname == "deploymentconfig-totpcgi-vpn.yml" %}
          secretName: tls-cert-vpn
{% else %}
          secretName: tls-cert-primary
{% endif %}
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - totpcgi
      from:
        kind: ImageStreamTag
        name: totpcgi:latest
        namespace: fas
    type: ImageChange
  - type: ConfigChange
