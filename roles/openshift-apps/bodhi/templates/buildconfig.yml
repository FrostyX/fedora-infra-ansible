apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: bodhi-base
    name: bodhi-base
  spec:
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM fedora:29
        LABEL \
          name="bodhi-base" \
          vendor="Fedora Infrastructure" \
          license="MIT"
        RUN curl -o /etc/yum.repos.d/infra-tags.repo https://infrastructure.fedoraproject.org/cgit/ansible.git/plain/files/common/fedora-infra-tags.repo
{% if env == "staging" %}
        RUN curl -o /etc/yum.repos.d/infra-tags-stg.repo https://infrastructure.fedoraproject.org/cgit/ansible.git/plain/files/common/fedora-infra-tags-stg.repo
{% endif %}
        # While dnf has a --nodocs, it doesen't have a --docs...
        RUN sed -i '/nodocs/d' /etc/dnf/dnf.conf
        RUN dnf install -y bodhi-server-{{bodhi_version}}
        # We can drop this block once Bodhi 4.0.0 is deployed to production.
{% if env == "production" %}
        # Put the fedmsg config in place
        RUN rm -f /etc/fedmsg.d/bodhi.py && \
        # Let's name it starting with zz so it sorts last.
            ln -sf /etc/bodhi-fedmsg.d/bodhi-openshift-web.py /etc/fedmsg.d/zzbodhi.py && \
        # Put the fedmsg cert and key in place
            mkdir -p /etc/pki/fedmsg/ && \
            ln -sf /etc/pki/fedmsg/key/fedmsg-bodhi.key /etc/pki/fedmsg/bodhi.key && \
            ln -sf /etc/pki/fedmsg/crt/fedmsg-bodhi.crt /etc/pki/fedmsg/bodhi.crt
{% endif %}
        # Set up krb5
        RUN rm -f /etc/krb5.conf && \
            ln -sf /etc/bodhi/krb5.conf /etc/krb5.conf && \
            ln -sf /etc/keytabs/koji-keytab /etc/krb5.bodhi_bodhi{{ env_suffix }}.fedoraproject.org.keytab
        ENV USER=openshift
      type: Dockerfile
    strategy:
      type: Docker
      dockerStrategy:
        noCache: false
    output:
      to:
        kind: ImageStreamTag
        name: bodhi-base:latest
kind: List
metadata: {}
---
apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: bodhi-web
    name: bodhi-web
  spec:
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM bodhi-base
        LABEL \
          name="bodhi-web" \
          vendor="Fedora Infrastructure" \
          license="MIT"
        RUN dnf install -y bodhi-docs-{{bodhi_version}} python3-pyramid_sawing
        # We can drop this block once Bodhi 4.0.0 is deployed to production.
        EXPOSE 8080
        ENTRYPOINT bash /etc/bodhi/start.sh
      type: Dockerfile
    strategy:
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "bodhi-base:latest"
    triggers:
      - type: "imageChange"
        imageChange: {}
    output:
      to:
        kind: ImageStreamTag
        name: bodhi-web:latest
kind: List
metadata: {}
{# We can drop the if statement here once we deploy 4.0.0 to production #}
{% if env == "staging" %}
---
apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: bodhi-consumer
    name: bodhi-consumer
  spec:
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM bodhi-base
        LABEL \
          name="bodhi-consumer" \
          vendor="Fedora Infrastructure" \
          license="MIT"
        # We only need the composer here because the consumer does not conditionally import the
        # composer code. This should be fixed in a future Bodhi release.
        RUN dnf install -y bodhi-composer-{{bodhi_version}}
        ENTRYPOINT /usr/bin/fedora-messaging consume
      type: Dockerfile
    strategy:
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "bodhi-base:latest"
    triggers:
      - type: "imageChange"
        imageChange: {}
    output:
      to:
        kind: ImageStreamTag
        name: bodhi-consumer:latest
kind: List
metadata: {}
{# We can drop this once we deploy 4.0.0 to production #}
{% endif %}
