# This is mostly following
# http://taigaio.github.io/taiga-doc/dist/setup-production.html#circus-and-gunicorn
#
# It is just for dev/testing.. we're installing stuff from git/pip, etc..
#

- yum: name={{item}} state=present
  with_items:
  - nginx
  - libsemanage-python
  - postgresql-server

  - python3-gunicorn
  - python3-psycopg2
  - gettext

  - git
  - python3
  - python3-devel
  - python3-pip
  - gcc
  - freetype-devel
  - libxml2-devel
  - libxslt-devel
  tags: taiga

- user: name=taiga comment="Taiga System Account"
  tags: taiga

### FIRST, there is a lot of postgres db stuff to setup ###
- name: Initialize postgres if necessary
  command: /usr/bin/postgresql-setup initdb
           creates=/var/lib/pgsql/data/base
  notify: restart postgresql
  tags: taiga

- name: Add our postgres config file.
  copy: >
    src=pg_hba.conf
    dest=/var/lib/pgsql/data/pg_hba.conf
    owner=postgres
  notify: restart postgresql
  tags: taiga

# No need to let postgres talk to the world, right?
#- name: Let postgresql listen to '*'
#  command: sed -i -e "s|#listen_addresses = 'localhost'|listen_addresses = '*'|" /var/lib/pgsql/data/postgresql.conf
#  notify: restart postgresql
#  tags: taiga

## If we want to do backups, we can enable these three tasks
#- name: Ensure postgres has a place to backup to
#  file: dest=/backups state=directory owner=postgres
#  tags: taiga
#
#- name: Copy over backup scriplet
#  copy: src=backup-database dest=/usr/local/bin/backup-database mode=0755
#  tags: taiga
#
#- name: Set up some cronjobs to backup databases as configured
#  template: >
#    src=cron-backup-database
#    dest=/etc/cron.d/cron-backup-database-taiga
#  tags: taiga

- name: Set postgresql-server to run on boot
  service: name=postgresql state=running enabled=yes
  ignore_errors: true
  notify: restart postgresql
  tags: taiga

# Make sure we have db users
- postgresql_user: name=taiga
  # password={{ taiga_db_pass }}
  tags: taiga

- postgresql_db: name=taiga owner=taiga encoding=UTF-8
  tags: taiga
### DONE with db stuff

### NEXT, setup taiga-back from git
- command: sudo -u taiga git clone https://github.com/taigaio/taiga-back.git
           chdir=/home/taiga/
           creates=/home/taiga/taiga-back
  tags: taiga

- command: sudo -u taiga git checkout stable
           chdir=/home/taiga/taiga-back
  tags: taiga

- command: pip3 install -r requirements.txt
           chdir=/home/taiga/taiga-back
           creates=/usr/lib/python3.4/site-packages/django/
  tags: taiga

## TODO -- make these idempotent with creates=...
- command: sudo -u taiga python3 manage.py migrate --noinput
           chdir=/home/taiga/taiga-back
  tags: taiga
- command: sudo -u taiga python3 manage.py loaddata initial_user
           chdir=/home/taiga/taiga-back
  tags: taiga
- command: sudo -u taiga python3 manage.py loaddata initial_project_templates
           chdir=/home/taiga/taiga-back
  tags: taiga
- command: sudo -u taiga python3 manage.py loaddata initial_role
           chdir=/home/taiga/taiga-back
  tags: taiga
- command: sudo -u taiga python3 manage.py compilemessages
           chdir=/home/taiga/taiga-back
  tags: taiga
- command: sudo -u taiga python3 manage.py collectstatic --noinput
           chdir=/home/taiga/taiga-back
  tags: taiga
