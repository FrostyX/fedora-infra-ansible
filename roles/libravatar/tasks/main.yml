---
- import_tasks: "mount_fs.yml"

- name: install prerequisities
  package: state=present pkg={{ item }}
  with_items:
  - "postgresql-server"
  - "postgresql-contrib"
  - "python3-psycopg2"
  - "libselinux-python"
  - "libsemanage-python"
  - "python3-virtualenv"
  - "community-mysql-devel"
  - "openldap-devel"
  - "python3-pip"
  - "gcc"
  - "git"
  - "httpd"
  - "python3-mod_wsgi"
  - "policycoreutils-python"

- group: name=www
- user: name=www group=www

- name: set fcontext for /srv/libravatar
  sefcontext:
    target: '/srv/libravatar(/.*)?'
    setype: httpd_sys_content_t
    state: present

- name: create /srv/libravatar
  file:
    path: /srv/libravatar
    setype: httpd_sys_content_t
    state: directory

- git:
    repo: https://git.linux-kernel.at/oliver/ivatar.git
    dest: /srv/libravatar
  ignore_errors: yes

- pip:
    requirements: requirements.txt
    virtualenv: /mnt/data/.virtualenv
    virtualenv_command: virtualenv-3
    chdir: /srv/libravatar

- name: copy run-in-venv script
  shell: cp /mnt/data/run-in-venv /usr/local/bin

- name: 'postgresql host is localhost'
  lineinfile:
    dest: '/etc/hosts'
    line: '127.0.0.1 postgresql'
    state: 'present'
  tags:
  - config

- name: copy pg_hba.conf
  copy: src="pg/{{ item }}" dest="/var/lib/pgsql/data/{{ item }}"
  with_items:
  - pg_hba.conf
  notify:
  - restart postgresql
  tags:
  - config

- name: ensure postgresql state
  service: state=started enabled=yes name=postgresql

- name: upgrade db to head
  command: "run-in-venv python3 manage.py migrate"
  args:
    chdir: /srv/libravatar

- name: collect static
  command: "run-in-venv python3 manage.py collectstatic --noinput"
  args:
    chdir: /srv/libravatar

# so Apache can execute psyco shared lib in virtualenv with httpd_sys_content_t type
- name: Set unified flag for Apache
  seboolean:
    name: httpd_unified
    state: yes
    persistent: yes

# https://bugzilla.redhat.com/show_bug.cgi?id=1535689
- name: Allow execmem for Apache
  seboolean:
    name: httpd_execmem
    state: yes
    persistent: yes

- name: copy apache files to conf.d (templates)
  template: src="httpd/{{ item }}" dest="/etc/httpd/conf.d/{{ item }}"
  with_items:
  - "libravatar.conf"
  notify:
  - reload httpd
  tags:
  - config

- name: copy httpd config
  copy: src="httpd/{{ item }}" dest="/etc/httpd/conf.d/{{ item }}"
  with_items:
  - welcome.conf
  notify:
  - reload httpd
  tags:
  - config

- name: ensure httpd state
  service: state=started enabled=yes name={{ item }}
  with_items:
  - httpd
