# create an osbs server
- include:  "/srv/web/infra/ansible/playbooks/include/virt-create.yml myhosts=docker-registry:docker-registry-stg"

- name: make the box be real
  hosts: docker-registry:docker-registry-stg
  user: root
  gather_facts: True

  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  roles:
  - base
  - rkhunter
  - nagios/client
  - hosts
  - fas_client
  - collectd/base
  - rsyncd
  - sudo

  tasks:
  - include: "{{ tasks }}/yumrepos.yml"
  - include: "{{ tasks }}/2fa_client.yml"
  - include: "{{ tasks }}/motd.yml"

  handlers:
  - include: "{{ handlers }}/restart_services.yml"

- name: setup docker distribution registry
  hosts: docker-registry:docker-registry-stg
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml


  # NOTE: tls is disabled for docker-distribution because we are listening only
  #       on localhost and all external connections will be through httpd which
  #       will be SSL enalbed.
  roles:
    # STAGING
    - {
      role: docker-distribution,
        conf_path: "/etc/docker-distribution/registry/config.yml",
        tls: {
          enabled: False,
        },
        log: {
          fields: {
            service: "registry"
          }
        },
        storage: {
          cache: {
            layerinfo: "inmemory"
            },
          filesystem: {
            rootdirectory: "/srv/"
          }
        },
        http: {
          addr: ":5000"
        },
        when: env == "staging"
      }
    # PROD
    - {
      role: docker-distribution,
        conf_path: "/etc/docker-distribution/registry/config.yml",
        tls: {
          enabled: False,
        },
        log: {
          fields: {
            service: "registry"
          }
        },
        storage: {
          cache: {
            layerinfo: "inmemory"
            },
          filesystem: {
            rootdirectory: "/srv/"
          }
        },
        httpd: {
          addr: ":5000"
        },
        when: env == "production"
      }

- name: Setup compose-x86-01 push docker images to registry
  hosts: compose-x86-01.phx2.fedoraproject.org
  user: root
  gather_facts: True
  tags:
    - releng-compose

  roles:
    - {
      role: push-docker,
        docker_cert_dir: "/etc/docker/certs.d/registry.stg.fedoraproject.org",
        private: "{{private}}",
      when: env == "staging"
    }
    - {
      role: push-docker,
        docker_cert_dir: "/etc/docker/certs.d/registry.fedoraproject.org",
        private: "{{private}}",
      when: env == "production"
    }
