# create an osbs server
- include:  "/srv/web/infra/ansible/playbooks/include/virt-create.yml myhosts=osbs-control-stg:osbs-control"
- include:  "/srv/web/infra/ansible/playbooks/include/virt-create.yml myhosts=osbs-nodes-stg:osbs-masters-stg"

- name: make the box be real
  hosts: osbs-control:osbs-control-stg:osbs-masters-stg:osbs-nodes-stg
  user: root
  gather_facts: True

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  roles:
    - base
    - rkhunter
    - nagios/client
    - hosts
    - fas_client
    - collectd/base
    - rsyncd
    - sudo

  tasks:
    - include: "{{ tasks }}/yumrepos.yml"
    - include: "{{ tasks }}/2fa_client.yml"
    - include: "{{ tasks }}/motd.yml"

  handlers:
  - include: "{{ handlers }}/restart_services.yml"

- name: Deploy controller private ssh keys to osbs control hosts
  hosts: osbs-control:osbs-control-stg
  user: root
  gather_facts: True

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  tasks:
    - name: deploy private key to control hosts
      copy:
        src: "{{private}}/files/osbs/{{env}}/control_key"
        dest: "/root/.ssh/id_rsa"
        owner: root
        mode: 0600

- name: Setup cluster hosts pre-reqs
  hosts: osbs-masters-stg:osbs-nodes-stg
  user: root
  gather_facts: True

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  tasks:
    - name: Deploy controller public ssh keys to osbs cluster hosts
      authorized_key:
        user: root
        key: "{{ lookup('file', '{{private}}/files/osbs/{{env}}/control_key.pub') }}"

    - name: Install necessary packages that openshift-ansible needs
      package: name="{{ item }}" state=installed
      with_items:
        - tar
        - rsync
        - dbus-python

- name: Deploy OpenShift Cluster
  hosts: osbs-control:osbs-control-stg
  user: root
  gather_facts: True

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  roles:
    - {
      role: ansible-ansible-openshift-ansible,
        cluster_inventory_filename: "cluster-inventory-stg",
        openshift_release: "v1.3",
        openshift_ansible_path: "/root/openshift-ansible",
        openshift_ansible_playbook: "playbooks/byo/config.yml",
        openshift_ansible_refspec: "openshift-ansible-3.3.38-1",
        openshift_cluster_masters_group: "osbs-masters-stg",
        openshift_cluster_nodes_group: "osbs-nodes-stg",
      when: env == 'staging',
      tags: ['openshift-cluster','ansible-ansible-openshift-ansible']
    }


- name: Setup OSBS requirements on hosts in the cluster
  hosts: osbs-masters-stg:osbs-nodes-stg
  user: root
  gather_facts: True

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  roles:
    - osbs-common

- name: Deploy OSBS on top of OpenShift
  hosts: osbs-masters-stg[0]:osbs-masters[0]
  user: root
  gather_facts: True

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  roles:
    - {
      role: osbs-on-openshift,
        osbs_openshift_home: "/var/lib/origin",
        osbs_namespace: "default",
        osbs_namespace_create: "false",
        osbs_kubeconf_path: "/etc/origin/master/admin.kubeconfig",
        osbs_environment: [
          KUBECONFIG: "{{ osbs_kubeconfig_path }}"
          ],
        osbs_service_accounts: [],
        osbs_readonly_users: [],
        osbs_readonly_groups: [],
        osbs_readwrite_users: [],
        osbs_readwrite_groups: [ "system:authenticated"],
        osbs_admin_users: [],
        osbs_admin_groups: [],
        osbs_docker_registry: false,
        osbs_docker_registry_storage: "/opt/openshift-registry",
      when: env == "staging"
    }
