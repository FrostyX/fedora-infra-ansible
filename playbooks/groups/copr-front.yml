- name: check/create instance
  hosts: copr-front:copr-front-stg
  user: root
  gather_facts: False

  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "{{ private }}/vars.yml"

  tasks:
  - include: "{{ tasks }}/persistent_cloud.yml"
  - include: "{{ tasks }}/growroot_cloud.yml"

- name: provision instance
  hosts: copr-front:copr-front-stg
  user: root
  gather_facts: True

  vars_files: 
   - /srv/web/infra/ansible/vars/global.yml
   - "{{ private }}/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  tasks:
  - include: "{{ tasks }}/cloud_setup_basic.yml"
  - include: "{{ tasks }}/postfix_basic.yml"

  - include: "{{ tasks }}/iptables.yml"

  - name: mount up disk of copr fe
    mount: name=/srv/copr-fe src='LABEL=copr-fe' fstype=ext4 state=mounted
    when: not devel

  - name: mount up bind mount for postgres
    mount: src=/srv/copr-fe/pgsqldb name=/var/lib/pgsql fstype=auto opts=bind state=mounted
    when: not devel

  - name: copy copr.repo
    copy: src="{{ files }}/copr/fe/yum/copr.repo" dest=/etc/yum.repos.d/copr.repo

#  - name: set the hostname
#    shell: hostname "{{ copr-hostname }}"

  - name: copy .forward file
    copy: src="{{ _forward_src }}" dest=/root/.forward owner=root group=root

  - name: deploy /etc/hosts file
    copy: src="{{ files }}/copr/hosts" dest=/etc/hosts owner=root group=root mode=644

  - name: install copr-fe pkgs
    yum: state=latest pkg={{ item }}
    with_items:
    - copr-frontend
    - copr-selinux
    - postgresql-server
    - bash-completion
    - fail2ban
    - mod_ssl
    - system-config-firewall-base
    tags:
    - packages

  - name: install copr configs
    template: src="{{ files }}/copr/fe/copr.conf" dest=/etc/copr/copr.conf mode=600
    notify:
    - restart httpd
    tags:
    - config

  - name: copy apache files to conf.d
    copy: src="{{ files }}/copr/fe/httpd/{{ item }}" dest="/etc/httpd/conf.d/{{ item }}"
    with_items:
    - coprs.conf
    - welcome.conf

  - name: copy pg_hba.conf
    copy: src="{{ files }}/copr/fe/pg/pg_hba.conf" dest=/var/lib/pgsql/data/pg_hba.conf owner=postgres group=postgres mode=0600

  - name: copy httpd ssl certificates (crt)
    copy: src="{{ puppet_private }}/httpd/copr-fe.fedoraproject.org.crt" dest="/etc/pki/tls/certs/" owner=root group=root mode=0600
    tags:
    - config

  - name: copy httpd ssl certificates (key)
    copy: src="{{ puppet_private }}/httpd/copr-fe.fedoraproject.org.key" dest="/etc/pki/tls/private/" owner=root group=root mode=0600
    tags:
    - config

  - name: copy httpd ssl certificates (CAcert)
    copy: src="{{ files }}/copr/DigiCertCA.crt" dest="/etc/pki/tls/certs/" owner=root group=root mode=0600
    when: not devel
    tags:
    - config

  - lineinfile: dest=/etc/httpd/conf.d/coprs.conf regexp="SSLCertificateFile " insertafter="^#SSLCertificateFile " line="SSLCertificateFile /etc/pki/tls/certs/copr-fe.fedoraproject.org.crt"
    notify:
    - restart httpd

  - lineinfile: dest=/etc/httpd/conf.d/coprs.conf regexp="SSLCertificateKeyFile " insertafter="^#SSLCertificateKeyFile " line="SSLCertificateKeyFile /etc/pki/tls/private/copr-fe.fedoraproject.org.key"
    notify:
    - restart httpd

  - lineinfile: dest=/etc/httpd/conf.d/coprs.conf regexp="SSLCertificateChainFile " insertafter="SSLCertificateKeyFile " line="SSLCertificateChainFile /etc/pki/tls/certs/DigiCertCA.crt"
    when: not devel
    notify:
    - restart httpd
 
  - name: enable services
    service: state=running enabled=yes name={{ item }}
    with_items:
    - httpd
    - postgresql
    - fail2ban

  handlers:
  - name: restart httpd
    service: name=httpd state=restarted
  - include: "{{ handlers }}/restart_services.yml"
