# This playbook is used to rebuild staging Koschei database.
# Useful to be ran after synchronization of staging Koji DB
# with production, which breaks Koschei - old builds from before sync
# have conflicting IDs with post-sync builds.
#
# In future, this playbook may be extended to sync content from
# production Koschei database dump, but this is not needed for now.

- name: stop koschei staging services
  hosts: koschei-backend-stg:koschei-web-stg
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - /srv/private/ansible/vars.yml
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - include: "{{ handlers }}/restart_services.yml"

  tasks:
  - service: name={{ item }} state=stopped
    when: '"backend" in ansible_hostname'
    with_items:
    - koschei-resolver
    - koschei-scheduler
    - koschei-watcher
    - koschei-polling
  - service: name=httpd state=stopped
    when: '"web" in ansible_hostname'

- name: drop and recreate koji-related tables
  hosts: koschei-backend-stg
  user: root
  become: yes
  become_user: koschei
  become_method: sudo
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - /srv/private/ansible/vars.yml
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - include: "{{ handlers }}/restart_services.yml"

  tasks:
  - shell: >
      koschei-admin psql <<< "
      BEGIN;
      SET LOCAL bdr.permit_ddl_locking = true;
      UPDATE base_package SET all_blocked = true;
      DROP TABLE buildroot_problem;
      DROP TABLE package CASCADE;
      COMMIT;
      "
  - command: koschei-admin create-db

- name: bring koschei staging services up
  hosts: koschei-backend-stg:koschei-web-stg
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - /srv/private/ansible/vars.yml
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - include: "{{ handlers }}/restart_services.yml"

  tasks:
  - service: name={{ item }} state=started
    when: '"backend" in ansible_hostname'
    with_items:
    - koschei-resolver
    - koschei-scheduler
    - koschei-watcher
    - koschei-polling
  - service: name=httpd state=started
    when: '"web" in ansible_hostname'
