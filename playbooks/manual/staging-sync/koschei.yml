# This playbook is used to rebuild staging Koschei database.
# Useful to be ran after synchronization of staging Koji DB
# with production, which breaks Koschei - old builds from before sync
# have conflicting IDs with post-sync builds.
#
# In future, this playbook may be extended to sync content from
# production Koschei database dump, but this is not needed for now.

- name: stop koschei staging services
  hosts: koschei_backend_stg:koschei_web_stg
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - /srv/private/ansible/vars.yml
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

  tasks:
  - service: name={{ item }} state=stopped
    when: '"backend" in ansible_hostname'
    with_items: "{{ koschei_backend_services }}"
  - service: name=httpd state=stopped
    when: '"web" in ansible_hostname'

- name: drop and recreate koji-related tables
  hosts: koschei_backend_stg
  user: root
  become: yes
  become_user: koschei
  become_method: sudo
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - /srv/private/ansible/vars.yml
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

  tasks:
  - postgresql_db: name=koschei state=absent
    become: yes
    become_user: postgres
    delegate_to: "{{ koschei_pgsql_hostname }}"
  - postgresql_db: name=koschei owner=koscheiadmin
    become: yes
    become_user: postgres
    delegate_to: "{{ koschei_pgsql_hostname }}"
  - command: koschei-admin create-db
  - command: >
      koschei-admin create-collection f29
        --display-name 'Fedora Rawhide'
        --target f29
        --bugzilla-product Fedora
        --bugzilla-version rawhide
  - command: >
      koschei-admin create-group php

- name: bring koschei staging services up
  hosts: koschei_backend_stg:koschei_web_stg
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - /srv/private/ansible/vars.yml
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

  tasks:
  - service: name={{ item }} state=started
    when: '"backend" in ansible_hostname'
    with_items: "{{ koschei_backend_services }}"
  - service: name=httpd state=started
    when: '"web" in ansible_hostname'
