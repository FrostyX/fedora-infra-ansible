# This playbook syncs the production koji instance with staging and manages all
# the steps we need to keep our setup intact.
#
# For a description of what we're doing, see
#   https://lists.fedoraproject.org/pipermail/infrastructure/2015-June/016377.html
# For a description of the koji 'secondary volumes' feature, see
#   https://lists.fedoraproject.org/pipermail/buildsys/2012-May/003892.html
# For a description of the sql migration we do, see
#   https://lists.fedoraproject.org/pipermail/buildsys/2015-June/004779.html


- name: bring staging services down
  hosts: koji-stg
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

  tasks:
  - service: name=httpd state=stopped
  - service: name=kojira state=stopped


- name: drop and re-create the staging db entirely
  hosts: db-koji02.stg.phx2.fedoraproject.org
  user: root
  become: yes
  become_user: postgres
  become_method: sudo
  tags:
  - db-sync
  vars:
  - builder_groups:
    - name: buildvm-stg
      arches: i386 x86_64
      extra_channels:
      - createrepo
      - livemedia
    - name: buildvm-aarch64-stg
      arches: aarch64
    - name: buildvm-armv7-stg
      arches: armhfp
    - name: buildvm-ppc64-stg
      arches: ppc64
    - name: buildvm-ppc64le-stg
      arches: ppc64le
    - name: buildvm-s390x-stg
      arches: s390x

  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

  tasks:
  - template: src=templates/koji-reset-staging.sql dest=/var/lib/pgsql/koji-reset-staging.sql
    tags:
    - db-sync-script

  - postgresql_user: name=koji password={{ kojiPassword }}
  - postgresql_db: name=koji state=absent
  - postgresql_db: name=koji owner=koji
# buildroot_listing is excluded from the sync to save some time
# TODO: install mbuffer on db-koji.stg
  - name: Import the prod db.  This will take quite a while.  Go get a snack!
    shell: >
      curl -s -S https://infrastructure.fedoraproject.org/infra/db-dumps/koji.dump.xz |
      mbuffer -q -m 10M -l /tmp/mbuffer-curl-to-xz.log |
      xzcat |
      mbuffer -q -m 100M -l /tmp/mbuffer-xz-to-sed.log |
      sed '/COPY buildroot_listing /,/\./d' |
      mbuffer -q -m 1G -l /tmp/mbuffer-sed-to-psql.log |
      psql koji
  - name: repoint all the prod rpm entries at the secondary volume (and other stuff)
    shell: psql -1 koji </var/lib/pgsql/koji-reset-staging.sql
  - name: vacuum database
    shell: psql koji <<<"VACUUM ANALYZE"

# TODO -- nuke old staging content in /mnt/fedora_koji/koji/
# TODO recreate directories under /mnt/fedora_koji/koji/
#     cd /mnt/fedora_koji/koji
#     mkdir compose packages repos repos-dist scratch vol work
#     chown apache:apache *
#     chcon unconfined_u:object_r:httpd_sys_rw_content_t:s0 *
#     ln -s /mnt/fedora_koji_prod/koji vol/prod

- name: bring staging services up
  hosts: koji-stg
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - import_tasks: "{{ handlers_path }}/restart_services.yml"

  tasks:
  - service: name=httpd state=started
  - service: name=kojira state=started

# TODO remount NFS on builders
#     ansible -i /srv/web/infra/ansible/inventory/builders builders-stg -m shell -a "umount /mnt/fedora_koji && mount /mnt/fedora_koji"
# TODO resart kojid
#     ansible -i /srv/web/infra/ansible/inventory/builders builders-stg -m service -a "name=kojid state=restarted"
# TODO run createrepo for selected tags
#     stgkoji regen-repo --nowait f29-build
# TODO include playbooks to sync apps that use koji (koschei/bodhi/mbs/...)
