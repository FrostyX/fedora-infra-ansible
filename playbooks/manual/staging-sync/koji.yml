# This playbook syncs the production koji instance with staging and manages all
# the steps we need to keep our setup intact.
#
# For a description of what we're doing, see
#   https://lists.fedoraproject.org/pipermail/infrastructure/2015-June/016377.html
# For a description of the koji 'secondary volumes' feature, see
#   https://lists.fedoraproject.org/pipermail/buildsys/2012-May/003892.html
# For a description of the sql migration we do, see
#   https://lists.fedoraproject.org/pipermail/buildsys/2015-June/004779.html


- name: bring staging services down
  hosts: koji-stg
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - include: "{{ handlers }}/restart_services.yml"

  tasks:
  - service: name=httpd state=stopped
  - service: name=kojid state=stopped
  - service: name=kojira state=stopped


- name: drop and re-create the staging db entirely
  hosts: db-koij01.stg.phx2.fedoraproject.org
  user: root
  become: yes
  become_user: postgres
  become_method: sudo

  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - include: "{{ handlers }}/restart_services.yml"

  tasks:
  - template: src=templates/koji-reset-staging.sql dest=/var/lib/pgsql/koji-reset-staging.sql
  - copy:
      src=/srv/web/infra/db-dumps/koji.dump.xz
      dest=/var/tmp/koji.dump.xz
      owner=postgres
      group=postgres
  - command: unxz /var/tmp/koji.dump.xz
             creates=/var/tmp/koji.dump
  - command: sed -i "s/CREATE DATABASE koji.*/SET bdr.permit_ddl_locking = true;/" /var/tmp/koji.dump
  - command: sed -i "s/connect bodhi2/connect koji\nSET bdr.permit_ddl_locking = true;/" /var/tmp/koji.dump
  - shell: >
      psql koji <<< "
      BEGIN;
      SET LOCAL bdr.permit_ddl_locking = on;
      DROP TABLE  archive_components      CASCADE;
      DROP TABLE  archive_rpm_components  CASCADE;
      DROP TABLE  archiveinfo             CASCADE;
      DROP TABLE  archivetypes            CASCADE;
      DROP TABLE  btype                   CASCADE;
      DROP TABLE  build                   CASCADE;
      DROP TABLE  build_notifications     CASCADE;
      DROP TABLE  build_target            CASCADE;
      DROP TABLE  build_target_config     CASCADE;
      DROP TABLE  build_types             CASCADE;
      DROP TABLE  buildroot               CASCADE;
      DROP TABLE  buildroot_archives      CASCADE;
      DROP TABLE  buildroot_listing       CASCADE;
      DROP TABLE  buildroot_tools_info    CASCADE;
      DROP TABLE  cg_users                CASCADE;
      DROP TABLE  channels                CASCADE;
      DROP TABLE  content_generator       CASCADE;
      DROP TABLE  event_labels            CASCADE;
      DROP TABLE  events                  CASCADE;
      DROP TABLE  external_repo           CASCADE;
      DROP TABLE  external_repo_config    CASCADE;
      DROP TABLE  group_config            CASCADE;
      DROP TABLE  group_package_listing   CASCADE;
      DROP TABLE  group_req_listing       CASCADE;
      DROP TABLE  groups                  CASCADE;
      DROP TABLE  host                    CASCADE;
      DROP TABLE  host_channels           CASCADE;
      DROP TABLE  image_archive_listing   CASCADE;
      DROP TABLE  image_archives          CASCADE;
      DROP TABLE  image_builds            CASCADE;
      DROP TABLE  image_listing           CASCADE;
      DROP TABLE  imageinfo               CASCADE;
      DROP TABLE  imageinfo_listing       CASCADE;
      DROP TABLE  log_messages            CASCADE;
      DROP TABLE  maven_archives          CASCADE;
      DROP TABLE  maven_builds            CASCADE;
      DROP TABLE  package                 CASCADE;
      DROP TABLE  permissions             CASCADE;
      DROP TABLE  repo                    CASCADE;
      DROP TABLE  rpminfo                 CASCADE;
      DROP TABLE  rpmsigs                 CASCADE;
      DROP TABLE  sessions                CASCADE;
      DROP TABLE  standard_buildroot      CASCADE;
      DROP TABLE  tag                     CASCADE;
      DROP TABLE  tag_config              CASCADE;
      DROP TABLE  tag_external_repos      CASCADE;
      DROP TABLE  tag_extra               CASCADE;
      DROP TABLE  tag_inheritance         CASCADE;
      DROP TABLE  tag_listing             CASCADE;
      DROP TABLE  tag_packages            CASCADE;
      DROP TABLE  tag_updates             CASCADE;
      DROP TABLE  task                    CASCADE;
      DROP TABLE  user_groups             CASCADE;
      DROP TABLE  user_perms              CASCADE;
      DROP TABLE  users                   CASCADE;
      DROP TABLE  volume                  CASCADE;
      DROP TABLE  win_archives            CASCADE;
      DROP TABLE  win_builds              CASCADE;
      COMMIT;
      "
  - name: Import the prod db.  This will take quite a while.  Go get a snack!
    shell: cat /var/tmp/koji.dump | psql koji
  - name: repoint all the prod rpm entries at the secondary volume (and other stuff)
    shell: psql koji < /var/lib/pgsql/koji-reset-staging.sql

# TODO -- nuke old staging content in /mnt/fedora_koji/koji/

- name: bring staging services up
  hosts: koji-stg
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  handlers:
  - include: "{{ handlers }}/restart_services.yml"

  tasks:
  - service: name=httpd state=started
  - service: name=kojid state=started
  - service: name=kojira state=started

- name: Nuke the prod db dump that we cached on lockbox
  hosts: lockbox
  user: root
  vars_files:
   - /srv/web/infra/ansible/vars/global.yml
   - "/srv/private/ansible/vars.yml"
   - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  tasks:
  - name: Nuke the prod db dump that we cached on lockbox
    file: dest=/var/tmp/prod-koji-dump/ state=absent
