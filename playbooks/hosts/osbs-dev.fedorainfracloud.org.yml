- name: check/create instance
  hosts: osbs-dev.fedorainfracloud.org
  gather_facts: False

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/web/infra/ansible/vars/fedora-cloud.yml
    - /srv/private/ansible/files/openstack/passwords.yml

  tasks:
  - include: "{{ tasks }}/persistent_cloud.yml"

- name: setup all the things
  hosts: osbs-dev.fedorainfracloud.org
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/private/ansible/files/openstack/passwords.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  pre_tasks:
    - include: "{{ tasks }}/cloud_setup_basic.yml"
    - name: set hostname (required by some services, at least postfix need it)
      shell: "hostname {{inventory_hostname}}"

- name: bootstrap ansible py2
  hosts: osbs-dev.fedorainfracloud.org
  gather_facts: false
  tasks:
    - name: install python and deps for ansible modules
      raw: dnf install -y python2 python2-dnf libselinux-python libsemanage-python python-firewall

- name: pre-install osbs tasks
  hosts: osbs-dev.fedorainfracloud.org
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/private/ansible/files/openstack/passwords.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  tasks:
    - name: override DNS for internal host network
      lineinfile:
        dest: /etc/hosts
        line: "{{ ansible_default_ipv4.address }} osbs osbs-dev.fedorainfracloud.org"

    - name: place htpasswd file
      copy:
        src: "{{private}}/files/httpd/osbs.htpasswd"
        dest: /etc/origin/htpasswd

- name: setup osbs
  hosts: osbs-dev.fedorainfracloud.org
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/private/ansible/files/openstack/passwords.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  roles:
    - osbs-atomic-reactor
    - osbs-common
    - osbs-install-openshift
    - {
        role: osbs-master,
          osbs_master_export_port: true,
          osbs_manage_firewalld: true,
          osbs_proxy_cert_file: '/etc/origin/proxy_selfsigned.crt',
          osbs_proxy_key_file: '/etc/origin/proxy_selfsigned.key',
          osbs_proxy_certkey_file: '/etc/origin/proxy_certkey.crt',
          osbs_proxy_ca_file: '/etc/origin/proxy_selfsigned.crt',
          osbs_readonly_users: [],
          osbs_readonly_groups: [],
          osbs_readwrite_users: [ "{{ osbs_koji_stg_username }}" ],
          osbs_readwrite_groups: [],
          osbs_admin_users: [],
          osbs_admin_groups: [],
          osbs_master_max_pods: 3,
          osbs_update_packages: false,
          osbs_image_gc_high_threshold: 90,
          osbs_image_gc_low_threshold: 80,
          osbs_identity_provider: "htpasswd_provider",
          osbs_identity_htpasswd: {
            name: htpasswd_provider,
            challenge: true,
            login: true,
            provider_file: "/etc/origin/htpasswd"
          }
      }
    - {
      role: osbs-client,
        general: {
          verbose: 0,
          build_json_dir: '/usr/share/osbs/',
          openshift_required_version: 1.1.0,
        },
        default: {
          username: "{{ osbs_koji_stg_username }}",
          password: "{{ osbs_koji_stg_password }}",
          openshift_url: 'https://osbs-dev.fedorainfracloud.org:8443/',
          registry_uri: 'https://osbs-dev.fedorainfracloud.org:5000/v2',
          source_registry_uri: 'https://osbs-dev.fedorainfracloud.org:5000/v2',
          build_host: 'osbs-dev.fedorainfracloud.org',
          koji_root: 'http://koji.fedoraproject.org/koji',
          koji_hub: 'http://koji.fedoraproject.org/kojihub',
          sources_command: 'fedpkg sources',
          build_type: 'prod',
          authoritative_registry: 'registry.example.com',
          vendor: 'Fedora Project',
          verify_ssl: false,
          use_auth: true,
          builder_use_auth: true,
          distribution_scope: 'private',
          registry_api_versions: 'v2',
          builder_openshift_url: 'https://172.17.0.1:8443/'
        }
      }
    - {
      role: docker-distribution,
        cert: {
          private_path: "files/osbs/osbs-dev.certs",
          dir: "/etc/pki/docker/osbs-dev.fedorainfracloud.org:5000/",
          src_name: "osbs-dev.fedorainfracloud.org.crt",
          src_key_name: "osbs-dev.fedorainfracloud.org.key",
          dest_name: "ca.cert",
          dest_key_name: "ca.key"
        },
        tls: {
          enabled: True,
          certificate: "/etc/pki/docker/osbs-dev.fedorainfracloud.org:5000/ca.cert",
          key: "/etc/pki/docker/osbs-dev.fedorainfracloud.org:5000/ca.key",
        }
      }

- name: post-install osbs tasks
  hosts: osbs-dev.fedorainfracloud.org
  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - /srv/private/ansible/vars.yml
    - /srv/private/ansible/files/openstack/passwords.yml
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml
  vars:
    osbs_kubeconfig_path: /etc/origin/master/admin.kubeconfig
    osbs_environment:
      KUBECONFIG: "{{ osbs_kubeconfig_path }}"


  tasks:
    - name: install docker
      action: "{{ ansible_pkg_mgr }} name=docker state=installed"

    - name: ensure docker daemon cert dir exists
      file:
        path: "/etc/docker/certs.d/"
        state: directory

    - name: create symlink for docker daemon cert
      file:
        dest: "/etc/docker/certs.d/osbs-dev.fedorainfracloud.org:5000"
        src: "/etc/pki/docker/osbs-dev.fedorainfracloud.org:5000"
        state: "link"

    - name: start and enable docker
      service: name=docker state=started enabled=yes

    - name: create fedora image stream for OpenShift
      shell: "echo '{ \"apiVersion\": \"v1\", \"kind\": \"ImageStream\", \"metadata\": { \"name\": \"fedora\" }, \"spec\": { \"dockerImageRepository\": \"osbs-dev.fedorainfracloud.org:5000/fedora\" } }' | oc create -f -"
      environment: "{{ osbs_environment }}"
      args:
        creates: /etc/osbs_fedora_imagestream_created

    - name: set policy for koji builder in openshift for osbs
      shell: "oadm policy add-role-to-user -n default edit htpasswd_provider: {{ osbs_koji_stg_username }}"

    - name: make sure latest fedora image is pulled and pushed to osbs registry
      shell: docker pull fedora && docker tag -f fedora:latest osbs-dev.fedorainfracloud.org:5000/fedora:latest && docker push osbs-dev.fedorainfracloud.org:5000/fedora:latest
      tags:
        - containerupdate

    - name: create buildroot container
      shell: atomic-reactor create-build-image --reactor-tarball-path /usr/share/atomic-reactor/atomic-reactor.tar.gz /usr/share/atomic-reactor/images/dockerhost-builder buildroot

    - name: clean up exited containers
      shell: for i in $(docker ps -a | awk '/Exited/ { print $1 }') ; do docker rm $i; done
      tags:
        - cleanup

    - name: clean up dangling images
      shell: for i in $(docker images -q -f "dangling=true") ; do docker rmi $i; done
      tags:
        - cleanup

